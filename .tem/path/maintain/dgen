#!/usr/bin/env bash

# Generate dockerfiles from shDockerfile

project_root="$(tem find -b website)"

process_types=("$@")

if [ -z "$process_types" ]; then
    process_types=(web api worker worker_dotfiles mail)
    if tem var -q env:dev; then
        process_types=("${process_types[@]}" frontend_dev)
    fi
fi

# Variables indicating if Dockerfile for corresponding process should be generated
web=
api=
worker=
worker_dotfiles=
mail=
frontend_dev=

for process_type in "${process_types[@]}"; do
    declare "$process_type"=true
done

export ENVIRONMENT="$(tem var env)"
export DEVICE="$(tem var device)"

mkdir -p _docker {worker,api,frontend}/_docker

# Usage: generate process_type shDockerfile dockerfile_dest_dir
generate() {
    process_type="$1"
    shDockerfile="$2"
    dest_dir="$3"
    dest_file="$project_root/$dest_dir/Dockerfile.$process_type.$ENVIRONMENT"
    echo "Generating $dest_file ..."

    shdocker \
        -s "$project_root/$shDockerfile" \
        -d "$dest_file"
}

[ -n "$web" ]             && generate web shDockerfile _docker
[ -n "$api" ]             && generate api api/shDockerfile api/_docker
[ -n "$worker" ]          && generate worker worker/docker/shDockerfile.worker worker/_docker
[ -n "$worker_dotfiles" ] && generate worker_dotfiles worker/docker/shDockerfile.worker_dotfiles worker/_docker
[ -n "$mail" ]            && generate mail docker/shDockerfile.mail _docker
[ -n "$frontend_dev" ]    && generate frontend_dev frontend/docker/shDockerfile frontend/_docker

exit
