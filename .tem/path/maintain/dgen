#!/usr/bin/env bash

# Generate dockerfiles from shDockerfile

project_root="$(tem find -b website)"

services=("$@")

if [ -z "$services" ]; then
    services=(web frontend api worker_server worker_dotfiles mail)
fi

# Variables indicating if Dockerfile for corresponding process should be generated
web=
api=
worker_server=
worker_dotfiles=
mail=
frontend=

for service in "${services[@]}"; do
    declare "$service"=true
done

export ENVIRONMENT="$(tem var env)"
export MACHINE="$(tem var machine)"

mkdir -p _docker {worker,api,frontend}/_docker

# Usage: generate process_type shDockerfile dockerfile_dest_dir
generate() {
    service="$1"
    shDockerfile="$2"
    dest_dir="$3"
    dest_file="$project_root/$dest_dir/Dockerfile.$service.$ENVIRONMENT"
    echo "Generating $dest_file ..."

    shdocker \
        -s "$project_root/$shDockerfile" \
        -d "$dest_file"
}

[ -n "$web" ]             && generate web shDockerfile _docker
[ -n "$api" ]             && generate api api/shDockerfile api/_docker
[ -n "$worker_server" ]   && generate worker_server worker/docker/shDockerfile.worker_server worker/_docker
[ -n "$worker_dotfiles" ] && generate worker_dotfiles worker/docker/shDockerfile.worker_dotfiles worker/_docker
[ -n "$mail" ]            && generate mail docker/shDockerfile.mail _docker
[ -n "$frontend" ]        && generate frontend frontend/shDockerfile frontend/_docker

exit
