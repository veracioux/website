{#
This is a Jinja2 template. It should be processed into docker-compose.yaml using
the _gen_docker_compose command provided by tem. When running `docker-compose`
through tem, this is done automatically.
#}

{%- set tag %}{% if env == 'dev' %}dev{% else %}latest{% endif %}{% endset %}
{%- set prod -%}{% if env == 'prod' %}-prod{% endif %}{% endset %}

{#- File extension for the dev environment dockerfiles #}
{%- set ext %}{% if env == 'dev' %}.dev{% else %}{% endif %}{% endset %}

version: '3.4'

services:
  db:
    # Image
    image: postgres:14.1-alpine

    # Container
    container_name: veracioux-db{{prod}}
    restart: always
    ports: ["$DB_PORT:5432"]
    env_file: &env_file
      - ./.env/common
      {%- if env == 'dev' %}
      - ./.env/dev
      {%- elif env == 'staging' %}
      - ./.env/staging
      - ./.env/staging.secret
      {%- elif env == 'prod' %}
      - ./.env/prod
      - ./.env/prod.secret
      {%- endif %}
      - worker/.env/common
      {%- if env == 'prod' %}
      - worker/.env/prod.secret
      {%- endif %}

  rabbitmq:
    image: rabbitmq:3.7
    container_name: veracioux-rabbitmq{{prod}}
    ports: ["$RABBITMQ_PORT:5672"]
    env_file:
      - worker/.env/common
      {%- if env == 'prod' %}
      - worker/.env/prod.secret
      {%- endif %}

  web:
    # Image
    image: veracioux.me/web:{{tag}}
    build:
      context: .
      dockerfile: Dockerfile.web{{ext}}

    # Container
    container_name: veracioux-web{{prod}}
    restart: always
    depends_on: [db, rabbitmq]
    ports:
      {%- if env == 'dev' %}
      - "$WEB_PORT:3000"
      {%- else %}
      - "$WEB_PORT:$WEB_PORT"
      {%- endif %}
      {%- if env == 'dev' or env == 'staging' %}
      - "$BACKEND_PORT:$BACKEND_PORT"
      - "$WORKER_SERVER_PORT:$WORKER_SERVER_PORT"
      {%- endif %}
    env_file: *env_file
    environment: &env
      {%- if env == 'dev' %}
      - PYTHONDONTWRITEBYTECODE=true
      {%- endif %}
      - RABBITMQ_HOST=rabbitmq
      - DB_HOST=db
    {%- if env == 'dev' %}
    volumes:
      - .:/app:rw
    {%- elif env == 'staging' and is_server == 'True' %}
    volumes:
      - $HOME/auth:/var/www
    {%- endif %}

  worker_dotfiles:
    # Image
    image: veracioux.me/worker_dotfiles:{{tag}}
    build:
      context: .
      dockerfile: Dockerfile.worker_dotfiles{{ext}}

    # Container
    container_name: veracioux-worker_dotfiles{{prod}}
    env_file:
      - ./.env/common
      - worker/.env/common
      {%- if env == 'staging' %}
      - worker/.env/staging.secret
      {%- elif env == 'prod' %}
      - worker/.env/prod.secret
      {%- endif %}
    environment: *env

  mail:
    # Image
    image: veracioux.me/mail:{{tag}}
    build:
      context: mail
      dockerfile: ../Dockerfile.mail{{ext}}

    # Container
    container_name: veracioux-mail{{prod}}

  {%- if env != 'dev' %}
  docker-registry:
    image: registry:2
    container_name: veracioux-docker-registry{{prod}}
    ports:
      - "$DOCKER_REGISTRY_PORT:5000"
    restart: always
    {%- if env == 'prod' %}
    environment:
      REGISTRY_HTTP_HOST: https://veracioux.me:443
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
    volumes:
      - "${HOME}/auth:/auth"
      - "${HOME}/docker-registry:/var/lib/registry"
    {%- endif %}

  {%- endif %}

# vim: filetype=yaml
