# -*- mode: dockerfile; -*- vim: filetype=dockerfile

FROM node:16.20-alpine3.18 AS pnpm-base

node_canvas_deps=(
    build-base
    g++
    cairo-dev
    jpeg-dev
    pango-dev
    giflib-dev
)

## Install deps for "canvas" node package
RUN apk add --no-cache curl "${node_canvas_deps[@]}"

RUN npm install -g pnpm@6.35.1

WORKDIR /frontend

if [ "$ENVIRONMENT" = "dev" ]; then
    CMD scripts/entrypoint-dev.sh
else
    FROM pnpm-base AS build
    ## Install local frontend dependencies
    COPY package.json pnpm-lock.yaml ./
    COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
    COPY gimmicks/ascii-mugshot/package.json gimmicks/ascii-mugshot/
    RUN pnpm install --shamefully-hoist --frozen-lockfile --prod

    COPY . .

    ## Bundle frontend
    ENV ENVIRONMENT="$ENVIRONMENT" MACHINE="$MACHINE"
    RUN pnpm run generate
    # Minify SVG icons and copy them to static root
    # TODO: integrate into "pnpm run generate" or as a vite plugin
    RUN pnpm svgo -f assets/icons -o dist/static/icons

    FROM node:18.20.7-alpine3.20 AS prod-base
    COPY --from=build /frontend/dist /frontend/frontend/dist
    CMD echo "INFO: The frontend image on '$ENVIRONMENT' serves only as a base image; when run as a container, it does nothing. Exiting..."
fi
